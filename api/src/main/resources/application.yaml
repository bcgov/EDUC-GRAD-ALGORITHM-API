#DB Properties
spring:
  jmx:
    enabled: false
  mvc:
    log-request-details: ${SPRING_SHOW_REQUEST_DETAILS}
  jackson:
    deserialization:
      fail-on-unknown-properties: false
  #Keycloak/OAuth properties
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${TOKEN_ISSUER_URL}
          jwk-set-uri: ${TOKEN_ISSUER_URL}/protocol/openid-connect/certs
      client:
        registration:
          algorithm-api-client:
            client-id: ${GRAD_ALGORITHM_API_CLIENT_NAME}
            client-secret: ${GRAD_ALGORITHM_API_CLIENT_SECRET}
            authorization-grant-type: client_credentials
        provider:
          algorithm-api-client:
            issuer-uri: ${TOKEN_ISSUER_URL}
            token-uri: ${TOKEN_ISSUER_URL}/protocol/openid-connect/token

#Logging properties
logging:
  file:
    name: /logs/app.log
  logback:
    rollingpolicy:
      max-history: 1
      max-file-size: 20MB
      clean-history-on-start: true
  pattern:
    #    file: "%d | [${HOSTNAME}] | %clr(%5p) | [%t]   | %logger{36}:%L | %msg%n"
    #    console: "%d | [${HOSTNAME}] | %clr(%5p) | [%t]   | %logger{36}:%L | %msg%n"
    file: '{"time_stamp":"%d{yyyy-MM-dd HH:mm:ss.SSS}","level":"%3p" ,"thread":"%t" ,"class":"%logger{36}","msg":"%replace(%msg){"[\n\r\"]",""}", "exception":"%replace(%rEx{10}){"[\n\r\"]",""}","http_event":%X{httpEvent:-""},"message_event":%X{messageEvent:-""}}%nopex%n'
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%5p] [%t] [%logger{36}] [%replace(%msg){'[\n\r\"]',''} %X{httpEvent} %X{messageEvent}] %replace(%rEx{10}){'[\n\r\"]',''}%nopex%n"
  level:
    ca:
      bc:
        gov:
          educ:
            api:
              gradalgorithm: ${APP_LOG_LEVEL}
    org:
      springframework:
        web: ${SPRING_WEB_LOG_LEVEL}
        security: ${SPRING_SECURITY_LOG_LEVEL}
        boot:
          autoconfigure:
            logging: ${SPRING_BOOT_AUTOCONFIG_LOG_LEVEL}

#Resilience
resilience4j.retry:
  instances:
    generalgetcall:
      maxRetryAttempts: ${MAX_RETRY_ATTEMPTS}
      waitDuration: 5s
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
      ignoreExceptions:
        - java.lang.NullPointerException
    generalpostcall:
      maxRetryAttempts: ${MAX_RETRY_ATTEMPTS}
      waitDuration: 5s
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
      ignoreExceptions:
        - java.lang.NullPointerException

#Local properties
server:
  undertow:
    threads:
      worker: 128
      io: 16
  #port: ${HTTP_PORT}
  max-http-request-header-size: 20000
  compression:
    enabled: ${ENABLE_COMPRESSION}
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,text/css,text/javascript,application/javascript
    min-response-size: 2048
    excluded-user-agents: MSIE 6.0,UCBrowser

authorization:
  user: ${GRAD_ALGORITHM_API_CLIENT_NAME}
  password: ${GRAD_ALGORITHM_API_CLIENT_SECRET}

#API Documentation
springdoc:
  api-docs:
    path: /api/v1/api-docs
  swagger-ui:
    path: /api/v1/api-docs-ui.html
    operationsSorter: alpha

#Endpoint properties
endpoint:
  keycloak:
    getToken: ${KEYCLOAK_TOKEN_URL}auth/realms/master/protocol/openid-connect/token
  grad-trax-api:
    school-clob-by-school-id:
      url: ${GRAD_TRAX_API}api/v2/trax/school-clob/%s
    school-all-school:
      url: ${GRAD_TRAX_API}api/v2/trax/school-clob
  grad-program-api:
    get-program-algorithm-data:
      url: ${GRAD_PROGRAM_API}api/v1/program/algorithmdatalist
    get-optional-program:
      url: ${GRAD_PROGRAM_API}api/v1/program/optionalprograms/%s/%s
    optional_program_name_by_optional_program_id:
      url: ${GRAD_PROGRAM_API}api/v1/program/optionalprograms/id/%s
    get-assessment-requirements:
      url: ${GRAD_PROGRAM_API}api/v1/program/assessment-requirements
  grad-course-api:
    get-course-algorithm-data:
      url: ${GRAD_COURSE_API}api/v1/course/course-algorithm/pen/%s
  student-assessment-api:
    get-assessment-type-codes:
      url: ${STUDENT_ASSESSMENT_API}api/v1/student-assessment/assessment-types
  grad-assessment-api:
    # Auth param present but not needed
    get-assessment-algorithm-data:
      url: ${GRAD_ASSESSMENT_API}api/v1/assessment/assessment-algorithm/pen/%s
  grad-student-graduation-api:
    get-algorithm-data:
      url: ${GRAD_STUDENT_GRADUATION_API}api/v1/studentgraduation/algo
    get-graduation-message:
      url: ${GRAD_STUDENT_GRADUATION_API}api/v1/studentgraduation/transcript/gradmessages/pgmCode/%s/msgType/%s
  grad-student-api:
    get-student-by-studentid:
      #Auth Required
      url: ${GRAD_STUDENT_API}api/v1/student/stdid/%s
    get-graduation-status: 
      url: ${GRAD_STUDENT_API}api/v1/student/studentid/%s/algorithm
    get-grad-student-algo-data:
      #Auth Required
      url: ${GRAD_STUDENT_API}api/v1/student/algorithmdata/%s
    get-graduation-student-record:
      get-optional-programs:
        #Auth Required
        url: ${GRAD_STUDENT_API}api/v1/student/optionalprogram/studentid/%s
  rule-engine-api:
    run-grad-algorithm-rules:
      url: ${GRAD_RULE_PROCESSOR_API}api/v1/rule-engine/run-grad-algorithm-rules
    run-grad-algorithm-rules-v2:
      url: ${GRAD_RULE_PROCESSOR_API}api/v2/rule-engine/run-grad-algorithm-rules

#Splunk LogHelper
splunk:
  log-helper:
    enabled: ${ENABLE_SPLUNK_LOG_HELPER}

nats:
  server: ${NATS_URL}
  maxReconnect: ${NATS_MAX_RECONNECT}
  connectionName: GRAD-ALGORITHM-API